name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        cabal: ["3.2"]
        ghc:
          - "8.0.2"
          - "8.2.2"
          - "8.4.4"
          - "8.6.5"
          - "8.8.3"
          - "8.10.1"
          - "9.0.1"
        exclude:
          - os: macOS-latest
            ghc: 8.0.2
          - os: macOS-latest
            ghc: 8.2.2
          - os: macOS-latest
            ghc: 8.4.4
          - os: macOS-latest
            ghc: 8.6.5
          - os: macOS-latest
            ghc: 8.8.3
          - os: windows-latest
            ghc: 8.0.2
          - os: windows-latest
            ghc: 8.2.2
          - os: windows-latest
            ghc: 8.4.4
          - os: windows-latest
            ghc: 8.6.5
          - os: windows-latest
            ghc: 8.8.3

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1.3
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze
      run: |
        cabal freeze

    - uses: actions/cache@v1
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build dependencies
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal build --dependencies-only --disable-optimization all

    - name: Build
      run: |
        cabal build --disable-optimization all 2>&1 | tee build.log
        # fail if warnings in local build
        # ! grep -q ": *[Ww]arning:" build.log || exit 1

    - name: Test
      run: |
        cabal test --disable-optimization all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["2.3.1"]
        ghc: ["8.8.3"]
        stackopts: ["--flag citeproc:icu", ""]

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1.3
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Install icu
      run: |
        sudo apt-get install libicu-dev

    - name: Build
      run: |
        stack build ${{ matrix.stackopts }} --system-ghc --fast --test --bench --no-run-tests --no-run-benchmarks

    # We don't run tests because of some slight discrepancies in test
    # results with icu; right now we just want to make sure it builds.
